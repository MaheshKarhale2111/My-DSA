Linear search : searching one by one in array , block by block search value in O(N)

Binart search : 
1. Only applicable on monotnous functions -> either increasing or decreasing 
2. Step 1 : find middle element 
    compare the key 
    2 condisions ->left of mid and right of mid 
    again find the mid and repeat the process 
3. In binary search one very important point is while fingding mid 
    instead of (start + end )/2 write  start + (end - start)/2 -> to ovoid int flow error 
4. Time complexity - each step decreasing size of array - o(logn) 
5. Derivation - each step denoted by N/2, N/4, N/8 .... N/2^k  and we know N/2^k = 1 
   only one index will left 
   rearranging  N = 2^k or k = log (N) where k is number of steps 
   
Questions : 
1. peak in mountain 
2. minimum and maximum index of element in array 
3. 


Binary search for matrix 

first fix row by doing mat[i][0] and mat[i][n] limits 
then once row is fixed you can use binary search on selected row
